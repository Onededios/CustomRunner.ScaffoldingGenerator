{
	"info": {
		"_postman_id": "669b504f-1c03-47b8-816d-68c437c606c6",
		"name": "Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33466007",
		"_collection_link": "https://dark-firefly-499624.postman.co/workspace/My-Workspace~207bebe6-3bf0-4e53-8202-f04148073706/collection/33466007-669b504f-1c03-47b8-816d-68c437c606c6?action=share&source=collection_link&creator=33466007"
	},
	"item": [
		{
			"name": "Apis Guru",
			"item": [
				{
					"name": "Get providers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const body = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set('provider', body.data[getRandomInteger(0, body.data.length)])"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}{{url}}{{version}}/providers.json",
							"host": [
								"{{protocol}}{{url}}{{version}}"
							],
							"path": [
								"providers.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get provider",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const body = pm.response.json();\r",
									"const api = Object.keys(body.apis)[0];\r",
									"\r",
									"pm.collectionVariables.set('apiName', api)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}{{url}}{{version}}/{{provider}}.json",
							"host": [
								"{{protocol}}{{url}}{{version}}"
							],
							"path": [
								"{{provider}}.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get services",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}{{url}}{{version}}/{{provider}}/services.json",
							"host": [
								"{{protocol}}{{url}}{{version}}"
							],
							"path": [
								"{{provider}}",
								"services.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get metrics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}{{url}}{{version}}/metrics.json",
							"host": [
								"{{protocol}}{{url}}{{version}}"
							],
							"path": [
								"metrics.json"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"pm.collectionVariables.set('protocol', 'https:/')\r",
							"pm.collectionVariables.set('url', '/api.apis.guru')\r",
							"pm.collectionVariables.set('version', '/v2')"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Art Institute of Chicago",
			"item": [
				{
					"name": "Get artworks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const body = pm.response.json()\r",
									"const id = body.data[getRandomInteger(0, body.data.length)].id\r",
									"pm.collectionVariables.set('id', id)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}{{url}}{{version}}/artworks?page=1&limit=10",
							"host": [
								"{{protocol}}{{url}}{{version}}"
							],
							"path": [
								"artworks"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}{{url}}{{version}}/artworks/{{id}}",
							"host": [
								"{{protocol}}{{url}}{{version}}"
							],
							"path": [
								"artworks",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}{{url}}{{version}}/artworks/search?q=cats",
							"host": [
								"{{protocol}}{{url}}{{version}}"
							],
							"path": [
								"artworks",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "cats"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"pm.collectionVariables.set('protocol', 'https:/')\r",
							"pm.collectionVariables.set('url', '/api.artic.edu/api')\r",
							"pm.collectionVariables.set('version', '/v1')"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"getRandomInteger = function (min, max) {\r",
					"    min = Math.ceil(min);\r",
					"    max = Math.floor(max);\r",
					"\r",
					"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"const body = pm.response.json()\r",
					"\r",
					"pm.test(\"Expected response to eq 200\", () => pm.expect(pm.response.code).to.eq(200))\r",
					"pm.test(\"Exepected not to receive an empty json\", () => pm.expect(body).not.to.be.empty);"
				]
			}
		}
	],
	"variable": [
		{
			"key": "protocol",
			"value": "",
			"type": "string"
		},
		{
			"key": "url",
			"value": "",
			"type": "string"
		},
		{
			"key": "version",
			"value": "",
			"type": "string"
		},
		{
			"key": "provider",
			"value": ""
		},
		{
			"key": "apiName",
			"value": ""
		},
		{
			"key": "apiVersion",
			"value": ""
		},
		{
			"key": "id",
			"value": ""
		}
	]
}